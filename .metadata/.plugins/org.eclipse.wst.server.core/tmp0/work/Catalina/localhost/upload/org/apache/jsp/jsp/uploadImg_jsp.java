/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2017-03-29 14:45:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class uploadImg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/common.css\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"../js/jquery-1.11.1.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\t//moustUpShow();\r\n");
      out.write("\t\t\tvar a = true;\r\n");
      out.write("\t\t\t$(\"#imgShow\").click(function(){\r\n");
      out.write("\t\t\t\tvar img = $(\"#imgShow\");\r\n");
      out.write("\t\t\t\tvar w = img.width();\r\n");
      out.write("\t\t\t\tvar h = img.height();\r\n");
      out.write("\t\t\t\tif(a){\r\n");
      out.write("\t\t\t\t\timg.width(w*2);\r\n");
      out.write("\t\t\t\t\timg.height(h*2);\r\n");
      out.write("\t\t\t\t\ta=false;\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\timg.width(w/2);\r\n");
      out.write("\t\t\t\t\timg.height(h/2);\r\n");
      out.write("\t\t\t\t\ta=true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//鼠标移动预览图片\r\n");
      out.write("\t\tfunction moustUpShow(){\r\n");
      out.write("\t\t\tvar la = $(\"#mouseUp\");\r\n");
      out.write("\t\t\t$(\"#imgShow\").mousemove(function(e){\r\n");
      out.write("\t\t\t\tvar x = e.pageX*2;\r\n");
      out.write("\t\t\t\tvar y = e.pageY*2;\r\n");
      out.write("\t\t\t\tconsole.log(e.pageY*2);\r\n");
      out.write("\t\t\t\tla.css({\r\n");
      out.write("\t\t\t\t\ttop : y,\r\n");
      out.write("\t\t\t\t\tleft :x \r\n");
      out.write("\t\t\t\t}).html('<img src=\"'+this.src+'\" />').show();\r\n");
      out.write("\t\t\t}).mouseout(function(){\r\n");
      out.write("\t\t\t\tla.hide();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction showView(obj){\r\n");
      out.write("\t\t\t//判断是否支持FileReader\r\n");
      out.write("\t\t\tif(window.FileReader){\r\n");
      out.write("\t\t\t\tvar reader = new FileReader();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert(\"不支持FileReader\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tvar file = obj.files[0];\r\n");
      out.write("\t\t\tvar imageType= /^image\\//;\r\n");
      out.write("\t\t\t//判断是否是图片\r\n");
      out.write("\t\t\tif(!imageType.test(file.type)){\r\n");
      out.write("\t\t\t\talert(\"请选择图片\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treader.onload= function(e){\r\n");
      out.write("\t\t\t\t//获取dom\r\n");
      out.write("\t\t\t\tvar img = document.getElementById(\"imgShow\");\r\n");
      out.write("\t\t\t\t//图片路径设置为读取的图片\r\n");
      out.write("\t            img.src = e.target.result;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treader.readAsDataURL(file);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//@ sourceURL=test.js\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<img id=\"imgShow\" name=\"imgShow\" />\r\n");
      out.write("\t<input id=\"imgUpload\" name=\"imgUpload\" type=\"file\" onchange=\"showView(this);\"/>\r\n");
      out.write("\t<div id=\"mouseUp\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
